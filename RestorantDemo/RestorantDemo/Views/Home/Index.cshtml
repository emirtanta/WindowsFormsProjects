@model Tuple<IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable<SelectListItem>>

@{
    ViewBag.Title = "Home Page";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#Item").val(0);

        //Item dropdown değerine tıklandığında Unit Price değerini değiştirir
        $("#Item").change(function () {
            var itemId = $("#Item").val();
            GetItemUnitPrice(itemId);
        });

        //Total text değerine hesaplanan Total miktarını yansıtır
        $("input[type=text]").change(function () {
            CalculateSubTotal();
        });

        $("input[type=text]").keyup(function () {
            CalculateBalance();
        });

        //ekle butonuna basıldığında listeye seçilen elemanı ekler
        $("#btnAddToList").click(function () {
            AddToTheItemList();
        });

        $("#btnpayment").click(function () {
            FinalPayment();
        });

    });

    function FinalPayment() {
        var objOrderViewModel = {};
        var ListOfOrderDetailViewModel = new Array();
        //OrderDetailViewModel

        objOrderViewModel.PaymentTypeId = $("#PaymentType").val();
        objOrderViewModel.CustomerId = $("#Customer").val();
        objOrderViewModel.FinalTotal = $("#txtFinalTotal").val();

        $("#tblRestorantItemList").find("tr:gt(0)").each(function () {
            var OrderDetailViewModel = {};
            OrderDetailViewModel.Total = parseFloat($(this).find("td:eq(5)").text());
            OrderDetailViewModel.ItemId = parseFloat($(this).find("td:eq(0)").text());
            OrderDetailViewModel.UnitPrice = parseFloat($(this).find("td:eq(2)").text());
            OrderDetailViewModel.Quantity = parseFloat($(this).find("td:eq(3)").text());
            OrderDetailViewModel.Discount = parseFloat($(this).find("td:eq(4)").text());

            ListOfOrderDetailViewModel.push(OrderDetailViewModel);

        });

        objOrderViewModel.ListOfOrderDetailViewModel = ListOfOrderDetailViewModel;

        $.ajax({

            async: true,
            type:'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objOrderViewModel),
            url: '/Home/Index',
            success: function (data) {
                alert(data);
            },
            error: function () {
                alert('Hata oldu');
            }
        });

    }


    //Modal kısmındaki Balance değerini hesaplar
    function CalculateBalance() {
        var FinalAmount = $("#txtPaymentTotal").val();
        var PaymentAmount = $("#txtPaymentAmount").val();
        var ReturnAmount = $("#txtReturnTotal").val();
        var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);

        $("#txtBalance").val(parseFloat(BalanceAmount).toFixed(2));

        
        if (parseFloat(BalanceAmount) == 0) {
            $("#btnPayment").removeAttr("disabled");
        }

        //Payment Amount değeri 0'dan küçük olduğunda Paymet butonu aktif olmuyor
        else {
            $("#btnPayment").attr("disabled", "disabled");
        }
    }

    function RemoveItem(itemId) {
        $(itemId).closest('tr').remove();
    }

    //Listeye eleman ekleme fonksiyonu
    function AddToTheItemList() {
        var tblItemList = $("#tblRestorantItemList");

        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();
        var ItemId = $("#Item").val();
        var ItemName = $("#Item option:selected").text();

        var Total = (UnitPrice * Quantity) - Discount;

        var ItemList = "<tr><td> hidden>" + ItemId + "</td><td>" + ItemName + "</td><td>" + parseFloat(UnitPrice).toFixed(2) + "</td><td>" + parseFloat(Quantity).toFixed(2) + "</td><td>" + parseFloat(Discount).toFixed(2) + "</td><td>" + parseFloat(Total).toFixed(2) + "</td><td> <input type='button' value='Remove' name='remove' class='btn btn-danger' onclick='RemoveItem(this)' </tr></tr>/>";

        tblItemList.append(ItemList);
        FinalItemTotal();
        ResetItem();
    }

    //Son Tutarı hesaplar
    function FinalItemTotal() {
        $("#txtFinalTotal").val("0.00");

        var FinalTotal = 0.00;

        $("#tblRestorantItemList").find("tr:gt(0)").each(function () {
            var Total = parseFloat($(this).find("td:eq(5)").text());

            FinalTotal += Total;
        });

        $("#txtFinalTotal").val(parseFloat(FinalTotal).toFixed(2));

        //Modal Dialog daki Payment kısmı
        $("#txtPaymentTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtBalance").val(parseFloat(FinalTotal).toFixed(2));
        
    }

    //listeye eklendiğinde remove butonuna basılınca silinmesini sağlar
    function ResetItem() {
        $("#txtUnitPrice").val('');
        $("#txtQuantity").val('');
        $("#txtDiscount").val('0.00');
        $("#Item").val('');
        $("#Item").val(0);

        $("#txtTotal").val("");
    }


    //Toplam fiyatı girilen miktara göre hesaplayan fonksiyon
    function CalculateSubTotal() {
        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();

        var Total = (UnitPrice * Quantity) - Discount;
        $("#txtTotal").val(parseFloat(Total).toFixed(2));
    }

    //Gelen ıtemId değerine göre UnitPrice değerini değiştirir
    function GetItemUnitPrice(itemId) {
        //alert(itemId);
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json;charset=utf-8',
            url: '/Home/GetItemUnitPrice',
            data: { itemId: itemId },
            success: function (data) {
                $("#txtUnitPrice").val(parseFloat(data).toFixed(2));
            },
            error: function () {
                alert("Hata oluştu");
            }
        });
    }

</script>


<style>

    .modal {
        text-align: center;
        padding: 0 !important;
    }

    .modal-before {
        content: '';
        display: inline-block;
        height: 100%;
        vertical-align: middle;
        margin-right: -4px;
    }

    .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
    }

    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        min-width: 0;
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 10px !important;
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0px;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #ffffff;
    }
</style>



<fieldset>
    <legend>
        Restorant
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Customer:
                    @Html.DropDownList("Customer", new SelectList(Model.Item1, "Value", "Text"), new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Payment Type:
                    @Html.DropDownList("PaymentType", new SelectList(Model.Item3, "Value", "Text"), new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total:
                    <input style="text-align:right" type="text" value="0.00" name="FinalTotal" readonly="readonly" id="txtFinalTotal" class="form-control" />
                </div>
            </div>
        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Restorant Items</legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Item:
                    @Html.DropDownList("Item", new SelectList(Model.Item2, "Value", "Text"), new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Unit Price:
                    <input type="text" style="text-align:right" readonly="readonly" id="txtUnitPrice" value="0.00" name="UnitPrice" class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Quntity:
                    <input type="text" style="text-align:right" id="txtQuantity" value="0.00" name="Quantity" class="form-control" />
                </div>
            </div>
        </div>

        <div class="row">


            <div class="col-md-4">
                <div class="form-group">
                    Discount:
                    <input type="text" style="text-align:right" id="txtDiscount" value="0.00" name="Discount" class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total:
                    <input type="text" style="text-align:right" readonly="readonly" id="txtTotal" value="0.00" name="Total" class="form-control" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" style="margin-top:20px;" value="Add To List" name="AddToList" id="btnAddToList" class="btn btn-success" />
                </div>
            </div>
        </div>

    </div>
</fieldset>

<fieldset>
    <legend>Restorant Listed Items</legend>
    <table style="width:100%" id="tblRestorantItemList">
        <thead>
            <tr>
                <th hidden>Item Id</th>
                <th>Item Name</th>
                <th>Unit Price</th>
                <th>Quantity</th>
                <th>Discount</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
    </table>
</fieldset>

@* data-backdrop="static" data-keydrop="false" özellikleri modal kısmının boşluğa basınca kapanmasını önler   *@
<div style="margin-top:10px">
    <input data-backdrop="static" data-keydrop="false" data-toggle="modal" data-target="#divPayment" style="float:right" type="button" value="Checkout" name="checkout" id="btnCheckout" class="btn btn-primary" />
</div>

<div id="divPayment" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="form-group col-md-3">
                            Total:
                            <input style="text-align:right" type="text" id="txtPaymentTotal" readonly="readonly" value="0.00" class="form-control" />
                        </div>

                        <div class="form-group col-md-3">
                            Payment Amount:
                            <input type="text" id="txtPaymentAmount" value="0.00" class="form-control" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-3">
                            Return Total:
                            <input style="text-align:right" type="text" id="txtReturnTotal" value="0.00" class="form-control" />
                        </div>

                        <div class="form-group col-md-3">
                            Balance Amount:
                            <input style="text-align:right" type="text" id="txtBalance" value="0.00" class="form-control" readonly="readonly" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button class="btn btn-success"  id="btnPayment" value="Payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" value="Close" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

